#include <stdio.h>
int main()
{
	printf("Hellow word");
	return 0;
}


int main()
{
	float x, y, z;
	scanf("%f%f",&x,&y);
	z = x + y;
		printf("%.1f", z);
	return 0;
}



int main()
{
	int a, b, c, d;
	scanf("%d%d",&a,&b);
	c = (a + b) * 2;
	d = (a * b);
	printf("%d\n", c);
	printf("%d\n", d);
	return 0;
}

int main()
{
	int a, b;
	scanf("%d%d", &a, &b);
	if (a > b)
		printf("%d", a);
	else
		printf("%d", b);
	return 0;
}


int main()
{
	double r, c, s;
	scanf("%lf", &r);
	c = 3.14 * 2 * r;
	s = 3.14 * (r*r);
	printf("%lf %lf", c, s);
	return 0;
}



#include <stdio.h>//比较三个整数大小
int main()
{
	int a, b, c;
	scanf("%d%d%d", &a, &b, &c);
	if (a > b)
		if (a > c)
			printf("%d", a);
		else
			printf("%d", c);
	else
		if (b > c)
			printf("%d", b);
		else
			printf("%d", c);
	return 0;
}


#include <stdio.h>//转义字符的使用
int main()
{
	printf("ab\tcd\n");
	printf("12345678\012student \x42\n");//\012相当于ASCII中的10，而\x42也是如此。
	return 0;
}


#include <stdio.h>//计算三角形面积
#include <math.h>
int main()
{
	double a = 3.5, b = 4.5, c = 5.5;//a,b,c表示三角形三条边
	double p, s;
	p = 0.5 * (a + b + c);
	s = sqrt(p * (p - a) * (p - b) * (p - c));//用劳伦公式计算面积
	printf("area=%lf", s);
	return 0;
}




#include <stdio.h>//计算sin，cos，tan的值
#include <math.h>
#define PI 3.1415926
int main()
{
	double x, y;
	x = 0.5 * PI;
	y = sin(x);
	printf("sin(%lf)=%lf\n", x, y);
	x = 0;
	y = cos(x);
	printf("cos(%lf)=%lf\n", x, y);
	x = 0.25 * PI;
	y = tan(x);
	printf("tan(%lf)=%lf\n", x, y);
	return 0; 
}




#include <stdio.h>//计算x,y,z的绝对值
#include <math.h>
int main()
{
	int X,x = -1;
	double Y, y = -0.234;
	long Z,z = -99999;
	X = abs(x);
	Y = fabs(y);
	Z = labs(z);
	printf("%d %lf %d ", X, Y, Z);
	return 0;
}


#include <stdio.h>//计算e的a次方和b的c次方
#include <math.h>
int main()
{
	double a, b, c, A, B;
	scanf("%lf%lf%lf", &a, &b, &c);
	A = exp(a);
	B = pow(b, c);
	printf("e^%.2lf=%.2lf\n%.2lf^%.2lf=%.2lf",a, A,b,c, B);
	return 0;
}



#include <stdio.h>//计算lnX和logX
#include <math.h>
int main()
{
	double x, y, a, b;
	scanf("%lf%lf", &x, &y);
	a = log(x);
	b = log10(y);
	printf("ln(%.2lf)=%.2lf\nlog(%.2lf)=%.2lf", x, a, y, b);
	return 0;
}


#include <stdio.h>//计算根号x
#include <math.h>
int main()
{
	double x, y;
	scanf("%lf", &x);
	y = sqrt(x);
	printf("根号%.2lf=%.2lf", x, y);
	return 0;
}





#include <stdio.h>//用当前时间机器做种子，产生4个随机数
#include <stdlib.h>
#include <time.h>
int main()
{
	srand(time(NULL));
	printf("%6d\n", rand());
	printf("%6d\n", rand());
	printf("%6d\n", rand());
	printf("%6d\n", rand());
	return 0;
}




#include <stdio.h>//输出单个字符
int main()
{
	char c1 = 'A', c2 = 65, c3 = '\x41';
	putchar(c1);
	putchar(c2);
	putchar(c3);
	putchar('\n');
	putchar(36);
	putchar('3');
	return 0;
}




#include <stdio.h>//利用getchar函数输入一个字符
int main()
{
	char ch;
	ch = getchar();//将输入的字符赋予ch
	putchar(ch);
	return 0;
}




#include <stdio.h>\\精度损耗问题
int main()
{
	double x = 3.6;
	int i;
	i = (int)x;
	printf("x=%lf,i=%d", x, i);
	return 0;
}



#include<stdio.h>//不完全计算问题
int main()
{
	int a, b, c, d;
	a = 0;
	b = 1;
	c = a++ && b++;
	d = a++ || b++;
	printf("a=%d,b=%d,c=%d,d=%d\n", a, b, c, d);
	return 0;
}



#include<stdio.h>//比较两个数大小
int main()
{
	double a, b, max;
	printf("Please input two real numbers:");
	scanf("%lf%lf", &a, &b);
	max = (a > b) ? a : b;
	printf("max=%lf\n", max);
	return 0;
}



#include<stdio.h>//逗号表达式的实例
int main()
{
	int i, j;
	j = (i = 2, i++, i++);
	printf("i=%d,j=%d\n", i, j);
	return 0;
}



#include<stdio.h>//位运算实例
int main()
{
	unsigned a, b;
	printf("input a number: ");
	scanf("%d", &a);
	b = a >> 5;
	b = b & 15;
	printf("a = % d, b = % d\n", a, b);
	return 0;
}



#include<stdio.h>//输入任意两个整数，求他们的和及平均值。
#include<math.h>
int main()
{
	int a, b, sum;
	double aver;
	printf("请输入两个整数：");
	scanf("%d%d", &a, &b);
	sum = a + b;
	aver = sum / 2.0;
	printf("sum = %d\naver = %.2lf", sum, aver);
	return 0; 
}


#include<stdio.h>//给定一个三位数整数，分别输出它的个位，十位和百位
#include<math.h>
int main()
{
	int num, m1, m2, m3;
	printf("请输入一个三位数整数：");
	scanf("%d", &num);
	m1 = num / 100;//百位
	m2 = num / 10 % 10;//十位
	m3 = num % 10 % 10;//个位
	printf("百位: %d,十位: %d,个位: %d", m1, m2, m3);
	return 0; 
}




#include<stdio.h>//取一个16位二进制数a的7~4位
#include<math.h>
int main()
{
	int a, b;
	printf("输入一个整数：");
	scanf("%d", &a);
	a = a >> 4;
	b = ~(~0 << 4);//设置一个后四位都为1的数
	a = a & b;//清掉a的后四位前的1
	printf("%d", a);
	return 0; 
}



#include<stdio.h>//以保证a不等于0，且有两个不同的根，求ax^2+bx+c=0的根
#include<math.h>
int main()
{
	double x1, x2, a, b, c, d;
	printf("请分别输入三个系数a,b,c的值");
	scanf("%lf%lf%lf", &a, &b, &c);
	d = b * b - 4 * a * c;
	x1 = (-b + sqrt(d)) / (2 * a);
	x2 = (-b - sqrt(d)) / (2 * a);
	printf("x1 = %.2lf\nx2 = %.2lf", x1, x2);
	return 0; 
}




#include<stdio.h>//输入大写字母，输出小写字母
int main()
{
	char c;
	printf("输入一个大写字母: ");
	c = getchar();
	if ('A' <= c && c <= 'Z')
		c = c + 32;//小写字母的ASCII值比大写的大32
	printf("%c\n", c);
	return 0; 
}


#include<stdio.h>//输入两个数，按升序输出这两个数
int main()
{
	double a, b, t;
	printf("输入两个数：");
	scanf("%lf%lf", &a, &b);
	if (a > b)
	{
		t = a;
		a = b;
		b = t;//交换a和b
	}
	printf("%.2lf  %.2lf", a, b);
	return 0; 
}



#include<stdio.h>//判断输入的百分制成绩属于哪个分数段，进而输出相应的五级制成绩
int main()
{
	int score;
	printf("请输入你的分数：");
	scanf("%d", &score);
	if (score >= 90)
		printf("A\n");
	else if (score >= 80)
		printf("B\n");
	else if (score >= 70)
		printf("C\n");
	else if (score >= 60)
		printf("D\n");
	else
		printf("E\n");
	return 0; 
}


#include<stdio.h>//在if分支中内嵌不带else的if语句
int main()
{
	double x, y;
	scanf("%lf", &x);
	if (x > 0)
	{//这里打上大括号是为了防止嵌套的if与else配对
		if (x >= 50)
			y = x;
	}
	else
		y = 0;
	printf("x = %lf,y = %lf\n", x, y);
	return 0;
}


#include<stdio.h>//switch语句：输入五级制语句，输出相应的百分制成绩段
int main()
{
	char grade;
	grade = getchar();
	grade = (grade >='a' && grade <= 'z' ? grade - 32 : grade);
	switch (grade)//switch语句，括号内写一个表达式
	{
	case'A':
		printf("90~100\n");//如果grade是A，则打印这个。后面同理
		break;//结束语句，如果有break就停止switch的执行。
	case'B':
		printf("80~89\n");
		break;
	case'C':
		printf("70~79");
		break;
	case'D':
		printf("60~69\n");
	case'E':
		printf("<60\n");
	default://结束语句，如果case都没用就执行此语句
		printf("error\n");
	}
	return 0;
}


#include<stdio.h>//switch语句：输入百分制语句，输出相应的五级制成绩段
int main()
{
	int score;
	printf("输入您的分数：");
	scanf("%d", &score);
	switch (score / 10)
	{
	case 10:case 9:
		printf("A\n");
		break;
	case 8:
		printf("B\n");
		break;
	case 7:
		printf("C\n");
		break;
	case 6:
		printf("D\n");
		break;
	default:
		printf("E\n");
	}
	return 0;
}



#include<stdio.h>//编写一个计算器程序
int main()
{
	double a, b;
	char c;
	printf("请输入计算式: ");
	scanf("%lf%c%lf", &a, &c, &b);
	switch (c)
	{
	case '+':
		printf("%lf", a + b);
		break;
	case'-':
		printf("%lf", a - b);
		break;
	case'*':
		printf("%lf", a * b);
		break;
	case'/':
		if (b == 0)
			printf("你不能这么写");
		else
			printf("%lf", a / b);
	default:
		printf("你写的啥");
	}
	return 0;
}



#include<stdio.h>//判断输入的字符类型
int main()
{
	char a;
	printf("请输入一个字符：");
	a = getchar();
	if (a >= '0' && a <= '9')
		printf("这是数字类型字符。\n");
	else if (a >= 'A' && a <= 'Z')
		printf("这是大写字母。\n");
	else if (a >= 'a' && a <= 'z')
		printf("这是小写字母");
	else
		printf("程序错误，请重新输入。\n");
	return 0;
}


#include<stdio.h>//输入三边长，求三角形面积
#include<math.h>
int main()
{
	double a, b, c, area, s;
	scanf("%lf%lf%lf", &a, &b, &c);
	if (a + b > c && b + c > a && a + c > b)
	{
		s = (a + b + c) / 2;
		area = sqrt(s * (s - a) * (s - b) * (s - c));
		printf("area = %7.2lf\n", area);
	}
	else
		printf("格式错误\n");
	return 0;
}



#include<stdio.h>//输入三个整数，输出最大的数和最小的数
#include<math.h>
int main()
{
	int a, b, c, max, min;
	scanf("%d%d%d", &a, &b, &c);
	max = a > b ? a : b;
	min = a < b ? a : b;
	if (max < c)
		max = c;
	else if (min > c)
		min = c;
	printf("max = %d,min = %d", max, min);
	return 0;
}


#include<stdio.h>//计算a*x*2+b*x+c=0的实数根
#include<math.h>
int main()
{
	double a, b, c, d, x1, x2,x;
	scanf("%lf%lf%lf", &a, &b, &c);
	d = b * 2 - 4 * a * c;
	if (a == 0)
		if (b == 0)
			if (c == 0)
				printf("此方程有无穷实数根。\n");
			else
				printf("此方程无解。\n");
		else
		{
			x = -c / b;
			printf("x = %.2lf", x);
		}
	else
		if (d >= 0)
		{
			x1 = (-b + sqrt(d)) / (2 * a);
			x2 = (-b - sqrt(d)) / (2 * a);
			printf("x1 = %.2lf,x2 = %.2lf", x1, x2);
		}
		else
			printf("此公式无实数根。\n");
	return 0;
}



#include<stdio.h>//while实例:计算1+2+3……+100的和
int main()
{
	int i = 1, sum = 0;//设置循环变量i和迭代变量sum
	while (i <= 100)//循环条件，决定了循环是否进行
	{//循环体语句，既可以是单个语句，也可以是复合语句
		sum = sum + i;
		i++;
	}
	printf("sum = %d", sum);
	return 0;
}


#include<stdio.h>//计算n的阶乘
int main()
{
	int i = 1, p = 1, n;
	scanf("%d", &n);
	while (i <= n)
	{
		p *= i;
		i++;
	}
	printf("n! = %d", p);
	return 0;
}



#include<stdio.h>//猴子吃桃问题
int main()
{
	int i = 9, p = 1;
	while (i >= 1)
	{
		p = 2 * (p + 1);
		i--;
	}
	printf("%d", p);
	return 0;
}


#include<stdio.h>
int main()
{
	int s = -1, i = 2;
	double p = 1.0, pi;
	do
	{
		p += s / (i + 1.0);
		i+=2;
		s = -s;
		pi = 1.0/ (i + 1);
	} while (pi >= 1E-6);
	p *= 4;
	printf("%lf", p);
	return 0;
}



#include<stdio.h>//求1！+2！+3！+……+n！的值
int main()
{
	int i;
	double p, sum;
	for (i = 2, p = 1, sum = 1;i <= 10;i++)
	{
		p *= i;
		sum += p;
	}
	printf("%lf", sum);
	return 0;
}




#include<stdio.h>//统计从键盘输入一行字符的个数，以回车结束
int main()
{
	int n;
	char c;
	printf("请输入一段字符：");
	for(n = 0;(c=getchar())!='\n';n++);
	printf("%d", n);
	return 0;
}



#include<stdio.h>//将数字512表示为两个数之和，这两个数分别是15和13的倍数
int main()
{
	int i, a, b;
	for (i = 1;;i++)
		if ((512 - i * 15) % 13 == 0)
			break;
	a = i * 15;
	b = 512 - i * 15;
	printf("%d	%d", a, b);
	return 0;
}

#include<stdio.h>//输出100~200之间能够被7或九整除的数
int main()
{
	int i, n = 0;
	for (i = 100;i <= 200;i++)
	{
		if (!(i % 7==0 || i % 9==0))
			continue;
		printf("%5d	", i);
		n++;
		if (n % 5 == 0)
			printf("\n");
	}

	return 0;
}



#include<stdio.h>//生成一个三角图像
#include<math.h>
int main()
{
	int i, j, k;
	for (i = 8;i >= 1;i--)//控制行数
	{
		for (j = 1;j <= 8 - i;j++)//控制输出的空格
			printf(" ");
		for (k = 1;k <= 2 * i - 1;k++)//控制输出的星星
			printf("*");
		printf("\n");
	}
	return 0;
}


#include<stdio.h>//生成所有三位自方次幂
#include<math.h>
int main()
{
	int i, j, k,m1,m2;
	printf("三位自方次幂");
	for(i=1;i<=9;i++)//i不能为0，不然不是三位数
		for(j=0;j<=9;j++)
			for (k = 0;k <= 9;k++)
			{
				m1 = i * 100 + j * 10 + k;
				m2 = i * i * i + j * j * j + k * k * k;
				if (m1 == m2)
					printf("%4d", m1);
			}
	return 0;
}



#include<stdio.h>//将数分离
#include<math.h>
int main()
{
	int m;
	scanf("%d", &m);
	int i, j, k, t, s;
	i = 1;
	s = m;
	while (s / 10)//设定计数器，计算数的位数
	{
		s = s / 10;
		i++;
	}
	for (j = i;j>=1;j--)//主要循环
	{
		k = m / pow(10, j - 1);
		m = m - k*pow(10,j-1);
		printf("%d ", k);
	}
	return 0;
}


#include<stdio.h>//用二分法求方程的根
#include<math.h>
int main()
{
	double c, a, b, fa, fb, fc;
	do
	{//验证fa*fb<0,是则跳出循环，否则重新输入
		printf("请输入两个值：");
		scanf("%lf%lf", &a, &b);
		fa = ((a + 1.1) * a + 0.9) * a - 1.4;
		fb = ((b + 1.1) * b + 0.9) * b - 1.4;
	} while (fa * fb >= 0);
	do//
	{
		c = (a + b) / 2;//找到ab的中点
		fc= ((c + 1.1) * c + 0.9) * c - 1.4;//计算c的函数值
		if (fc * fa > 0)//判断fc和fa之间是否有实根
			a = c;//是则让a=c
		else
			b = c;//否则让b=c
	} while (fabs(fc) >= 1e-6);//直到fc接近临界值
	printf("一个实根为：%8.2lf\n", c);
	return 0;
}




#include<stdio.h>//求多项式
#include<math.h>
int main()
{
	double sum, p, x;
	int n, i, s;
	printf("请输入多项式的第n项，和x的值：");
	scanf("%d%lf", &n, &x);
	sum = x;
	p = x;
	s = 1;
	for (i = 2;i <= n;i++)//用迭代法
	{
		p *= x * x / (2 * i - 2) / (2 * i - 1);
		s = -s;
		sum += s * p;
	}
	printf("sum = %lf\n", sum);
	return 0;
}



#include<stdio.h>//判断一个数是不是素数
#include<math.h>
int main()
{
	int a;
	printf("输入一个大于1的整数：");
	scanf("%d", &a);
	int i,j;
	for (i = 2;i <  a;i++)
		if (a % i == 0)
		{
			printf("不是素数");
			break;
		}
	if (i / a == 1)
		printf("是素数");
	return 0;
}


#include<stdio.h>//使用欧几里得算法计算两个数的最大公约数
#include<math.h>
int main()
{
	int a, b, t,m;
	printf("输入两个正整数：");
	scanf("%d%d", &a, &b);
	if (a < b)//判断两个数的大小
	{
		t = b;
		b = a;
		a = t;
	}
	do
	{
		m=a%b;
		a = b;
		b = m;
	} while (m != 0);
	printf("%d", a);
	return 0;
}



#include<stdio.h>//一维数组元素的赋值与输出
int main()
{
	int a[5], i;
	for (i = 0;i < 5;i++)
		a[i] = i + 1;
	for (i = 0;i < 5;i++)
		printf("%3d", a[i]);
	return 0;
}



#include<stdio.h>//二维数组元素的赋值与输出
int main()
{
	int a[3][4], i, j;
	for (i = 0;i < 3;i++)//外层循环控制行
		for (j = 0;j < 4;j++)//内层循环控制列
			scanf("%d", &a[i][j]);
	printf("\n数组是：");
	for (i = 0;i < 3;i++)
		for (j = 0;j < 4;j++)
			printf("%3d", a[i][j]);
	return 0;
}



#include<stdio.h>//有程序产生某个数组a
int main()
{
	int a[3][5], i, j;
	for (i = 0;i < 3;i++)
		for (j = 0;j < 5;j++)
			a[i][j] = i * 5 + j + 1;
	printf("数组a为：");
	for (i = 0;i < 3;i++)
		for (j = 0;j < 5;j++)
			printf("%6d", a[i][j]);
	return 0;
}


#include<stdio.h>
#include<math.h>
int main()
{
	int a[15];
	int i,j,b;
	for (i = 0, j = 1;i < 15;i++, j++)
	{
		a[i] = j;
	}
	int x;
	scanf("%d", &x);
	for (i = 0;i < 15;i++)
	{
		if (a[i] == x)
		{
			printf("是第%d个元素",i+1);
			b=1;
			break;
		}
	}
	if (b != 1)
		printf("未查找到相关数据。");
	return 0;
}




#include<stdio.h>
#include<math.h>
int main()
{
	int a[15],i,j=1;
	for (i = 0;i < 15;i++,j+=2)
	{
		a[i] = j;
	}
	int p = 0, left = 0, right = 14, x,mid;
	scanf("%d", &x);
	for (p = 0;left <= right;)
	{
		mid = (left + right) / 2;
		if (a[mid] == x)
		{
			printf("为第%d个数组元素。",mid+1);
			p = 1;
			break;
		}
		else if (a[mid] < x)
			left = mid + 1;
		else
			right = mid - 1;
	}
	if (p == 0)
		printf("未找到相关数据。");
	return 0;
}


#include<stdio.h>
#include<math.h>
int main()
{
	int a[15],i,j=1;
	for (i = 0;i < 15;i++,j+=2)
	{
		a[i] = j;
	}
	int x;
	scanf("%d", &x);
	for (i = x;i < 14;i++)
	{
		a[i] = a[i + 1];
	}
	for (i = 0;i < 15;i++)
		printf("%d\t", a[i]);
	return 0;
}



#include<stdio.h>
#include<math.h>
int main()
{
	int a[15],i,j=1;
	for (i = 0;i < 15;i++,j+=2)
	{
		a[i] = j;
	}
	int x,k,t;
	scanf("%d", &x);
	for (k = 1;k <= x;k++)
	{
		t = a[0];
		for (i = 0;i < 14;i++)
		{
			a[i] = a[i + 1];
		}
		a[14] = t;
	}
	for (i = 0;i < 15;i++)
		printf("%d\t", a[i]);
	return 0;
}


#include<stdio.h>//利用冒泡算法对数组进行从小到大排序
#include<math.h>
int main()
{
	int a[15],i,j=1;
	for (i = 0;i < 15;i++,j-=2)
	{
		a[i] = j;
	}
	int k,t,m;
	for (m = 14;m > 0;m--)
	{
		k = m;
		for (i = 0;i < k;i++)
		{
			if (a[i] > a[i + 1])
			{
				t = a[i];
				a[i] = a[i + 1];
				a[i + 1] = t;
			}
		}
	}
	for (i = 0;i < 15;i++)
	{
		printf("%d\t", a[i]);
	}
	return 0;
}


#include<stdio.h>//利用选择排序法对数组进行从小到
#include<math.h>
int main()
{
	int a[15],i,j=1;
	for (i = 0;i < 15;i++,j-=2)
	{
		a[i] = j;
	}
	int m, t, max;
	for (m = 0;m < 14;m++)
	{
		max=m;
		for (i = m + 1;i < 15;i++)
		{
			if (a[max] < a[i])
				max=i;
		}
		if (max=i)
		{
			t = a[i];
			a[i] = a[max];
			a[max] = t;
		}
	}
	for (i = 0;i < 15;i++)
	{
		printf("%d\t", a[i]);
	}
	return 0;
}


#include<stdio.h>//对已经排好序（升序）的两个数组合并重排
#include<math.h>
int main()
{
	int a[5], b[7], c[12];
	int i, j, k, m, n, o;
	for (i = 0,j=2;i < 5;i++,j++)
	{
		a[i] = 3*j;
	}
	for (k = 0, m = -5;k < 7;k++,m+=3)
	{
		b[k] = m;
	}
	i = k = n = 0;
	while (i <=4 && k <= 6)
	{
		if (a[i] <= b[k])
		{
			c[n] = a[i];
			n++;
			i++;
		}
		else
		{
			c[n] = b[k];
			n++;
			k++;
		}
	}
	if (i <= 4)
	{
		for (o = i;o <= 4;o++)
		{
			c[n] = a[o];
			n++;
		}
	}
	else
	{
		for (o = k;o <= 6;o++)
		{
			c[n] = b[o];
			n++;
		}
	}
	for (n = 0;n < 12;n++)
		printf("%d\t", c[n]);
	return 0;
}





#include<stdio.h>//判断二维数组是否为对称矩阵
#define N 4
int main()
{
	int a[N][N];
	int i, j, flag = 1;
	printf("请输入十二个整数：\n");
	for (i = 0;i < N;i++)
	{
		for (j = 0;j < N;j++)
		{
			scanf("%d", &a[i][j]);
		}
	}
	for (i = 0;i < N && flag;i++)
	{
		for(j=0;j<i;j++)
			if (a[i][j] != a[j][i])
			{
				flag = 0;
				break;
		}
	}
	if (flag == 1)
		printf("Array a is yes!\n");
	else
		printf("Array a is no!\n");
	return 0;
}



#include<stdio.h>//使用不同方法访问数组a
#include<math.h>

int main()					
{
	int a[10], i;
	for (i = 0;i < 10;i++)
	{
		a[i] = 2 * (i + 1);
	}
	int* p;
	p = a;									//也可以写成p=&a[0]
	
	for (i = 0;i < 10;i++)
		printf("%d ", a[i]);
	printf("\n");

	for (i = 0;i < 10;i++)
		printf("%d ", p[i]);
	printf("\n");
	for (i = 0;i < 10;i++)
		printf("%d ", *(a + i));
	printf("\n");
	for (i = 0;i < 10;i++)
		printf("%d ", *(p + i));
	return 0;
}




#include<stdio.h>					//确定数组每个成分的大小
#include<math.h>

int main()
{
	int a[3][4] = { {0,1,2,3},{4,5,6,7},{8,9,10,11} };

	printf("The size of a = %u\n", sizeof(a));
	printf("The size of a[0] = %u\n", sizeof(a[0]));
	printf("The size of a[0][0] = %u\n", sizeof(a[0][0]));
	return 0;
}


#include<stdio.h>					//通过地址访问二维数组的元素
#include<math.h>

int main()
{
	int a[3][4] = { {0,1,2,3},{4,5,6,7},{8,9,3,6} };
	int i, j;

	for (i = 0;i < 3;i++)
		for (j = 0;j < 3;j++)
			printf("a[%d][%d] = %d		", i, j, *(a[i] + j));
	printf("\n");
	return 0;
}



int main()
{
	int a[3][4] = { 1,3,5,7,9,11,13,15,17,19,21,23 };
	int i, j, (*p)[4];
	p = a;

	for (i = 0;i < 3;i++)
	{
		for (j = 0;j < 4;j++)
			printf("%4d", *(*p + j));

		p++;
		printf("\n");
	}
	return 0;
}


#include<stdio.h>					//通过指针变量访问二维数组元素
#include<math.h>

int main()
{
	int a[3][4] = { 1,3,5,7,9,11,13,15,17,19,21,23 };
	int* p;

	for (p = a[0];p < a[0] + 12;p++)
	{
		if ((p - a[0]) % 4 == 0)
			printf("\n");				//访问一行后换行

		printf("%4d", *p);
	}

	return 0;
}



#include<stdio.h>					//一维字符数组的引用

int main()
{
	char a[] = { "Beijing2008" }, b[5] = { '\0' };//给数组b一个终止符
	int i;

	for (i = 0;i < 4;i++)			//输入数组b的字符串
		b[i] = a[i + 7];

	for (i = 0;i < 11;i++)				//输出数组a中的字符串
		printf("%c", a[i]);

	printf("\n");

	for (i = 0;i < 4;i++)			//输出数组b
		printf("%c", b[i]);

	printf("\n");
	printf("%d\n", a[0]);			//输出a[0]的ASCII码

	return 0;
}





#include<stdio.h>					//字符的逐个输入输出

int main()
{
	char c[12] = { '\0' };
	int i;

	for (i = 0;i < 12;i++)			//逐个输入字符
		scanf("%c", &c[i]);

	for (i = 0;i < 12;i++)			//逐个输出字符
		printf("%c", c[i]);

	printf("\n");

	return 0;
}




#include<stdio.h>					//二维字符数组单个字符引用

int main()
{
	char week[7][10] = { "Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Satuiday" };
	int i, j;

	for (i = 0;i < 7;i++)				//依次输出各个字符串
	{
		for (j = 0;j < 10;j++)
			printf("%c", week[i][j]);

		printf("\n");
	}

	return 0;
}





#include<stdio.h>					//二维字符数组行的引用

int main()
{
	char week[7][10] = { "Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Satuiday" };
	int i;

	for (i = 0;i < 7;i++)				//按行输出字符串
	{
		printf("%s", week[i]);
		printf("\n");
	}

	return 0;
}


#include <stdio.h>

int main()                  
{
    char*string;
    string = "This is a string";            //将字符串的首地址赋予指针
    
    printf("%s\n", string);
    string += 8;

    while (* string)                        //输出字符串，直到*string为零
    {
        putchar(string[0]);
        string++;
    }

    return 0;
}


#include <stdio.h>

int main()                  
{
    char str[] = "This is a string.";
    char* string;                   //定义一个字符串数组和一个指针变量
    string = str;                   //将数组的首地址赋予指针变量

    printf("%s\n", str);            //输出数组str
    printf("%s\n", string);         //用指针变量间接输出字符串
    string += 8;

    while (* string)
    {
        putchar(string[0]);
        string++;
    }    
    
    return 0;
}





#include <stdio.h>

int main() 
{
    int i, j , k, n = 7;

    for (i = 1; i <= 7; i++)
    {
        if (i == 1 || i==n)
        {
            for (j = 1; j <= 2; j++)
                printf(" ");
            for (k = 1; k <= 4; k++)
                printf("*");
            printf("\n");
        }
        else if (i == 2 || i == 6)
        {
            for (j = 1; j <= 1; j++)
                printf(" ");
            for (k = 1; k <= 1; k++)
                printf("*");
            printf("\n");
        }
        else
        {
            for (j = 1; j <= 1; j++)
                printf("*");
            printf("\n");
        }
    }
    return 0;
}



#include <stdio.h>                      //将大写字母输出小写字母和ASCII码

int main() 
{
    int big, small;

    printf("输入一个大写字母：");
    big = getchar();
    small = big + 32;               //利用ASCII码转换为小写字母
    printf("%c", small);
    printf("\n%d", small);

    return 0;
}





#include <stdio.h>                     //输入四个不相等的数，比较最小值 

int main() 
{
    double a, b, c, d;
    double min;
    
    printf("输入四个不相等的数：");
    scanf("%lf%lf%lf%lf", &a, &b, &c, &d);

    min = a;
    if (b < min)
        min = b;
    if (c < min)
        min = c;
    if (d < min)
        min = d;

    printf("%.2lf", min);

    return 0;
}



#include <stdio.h>

int main() 
{
    int a, b, c;
    
    printf("请输入三个整数：\n");
    scanf("%d %d %d", &a, &b, &c);
    
    if (a > b) 
    {
        // 交换a和b的值
        int temp = a;
        a = b;
        b = temp;
    }
    
    if (a > c) 
    {
        // 交换a和c的值
        int temp = a;
        a = c;
        c = temp;
    }
    
    if (b > c) 
    {
        // 交换b和c的值
        int temp = b;
        b = c;
        c = temp;
    }
   
    printf("从小到大输出结果为：%d %d %d\n", a, b, c);
   
    return 0;
}




#include <stdio.h>

int main()
{
    double F, C;

    printf("输入华氏度：");
    scanf("%lf", &F);

    C = 5/9.0 * (F - 32);

    if (C > 40)
        printf("Hot");
    else if (C > 30)
        printf("Warm");
    else if (C > 20)
        printf("Room Temperature");
    else if (C > 10)
        printf("Cool");
    else if (C > 0)
        printf("Cold");
    else
        printf("Freezing");

    return 0;
}



#include <stdio.h>

int main()               //输入n个数，输出其最大值和最小值，已经他们的位置                 
{
    int n, num, max, min, max_pos, min_pos, i;
    printf("请输入n: ");
    scanf("%d", &n);

    for (i = 1; i <= n; i++)
    {
        printf("请输入第%d个数：", i);
        scanf("%d", &num);

        if (i == 1)         //判断是否为第一个数，是则将最大值和最小值初始化为该数，并记录位置
        {
            max = min = num;
            max_pos = min_pos = i;
        }
        else
        {
            if (num > max)              // 更新最大值和最大值的位置
            {
                max = num;
                max_pos = i;
            }
            if (num < min)              // 更新最小值和最小值的位置
            {
                min = num;
                min_pos = i;
            }
        }
    }

    printf("最大值为%d，最小值为%d。", max, min);
    printf("\n最大值是第%d个数，最小值是第%d个数", max_pos, min_pos);

    return 0;
}

、

#include <stdio.h>

int main()                               
{
    char str[100];

    printf("输入一段话：");
    gets(str);
    printf("你的输入：%s\n", str);
    
    return 0;
}




#include <stdio.h>

int main()                               
{
    char s1[20], s2[20] = "Hello\nWorld";
    
    gets(s1);
    puts(s1);
    puts(s2);

    return 0;
}




#include <stdio.h>
#include <string.h>

int main() 
{
    char a[10], b[100] = "你妈死了";

    strcpy(a, b);
    puts(a);
    puts(b);

    return 0;
}

#include <stdio.h>
#include <string.h>

int main() 
{
    char str1[100];
    char str2[100];

    printf("输入字符串1：");
    gets(str1);
    printf("输入字符串2：");
    gets(str2);

    int res = strcmp(str1, str2);

    if(res < 0)
    {
        printf("str1比str2小");

    }
    else if(res > 0)
    {
        printf("str1比str2大");
    }
    else
    {
        printf("两者一样大");
    }

    return 0;
}



#include <stdio.h>
#include <string.h>

int main() 
{
    char a[] = "I am a handsome man";
    
    int b = strlen(a);
    printf("%d", b);

    return 0;
}



#include <stdio.h>
#include <string.h>

int main() 
{
    char a[10] = "你tm就是";
    char b[] = "一个傻逼";

    strcat(a, b);
    printf("%s", a);

    return 0;
}

#include <stdio.h>
#include <string.h>

int main() 
{
    char a[] = "I AM A HANDSOME MAN";
    
    strlwr(a);
    printf("%s", a);

    return 0;
}



#include <stdio.h>
#include <string.h>

int main() 
{
    char a[] = "i am a handsome man";
    
    strupr(a);
    printf("%s", a);

    return 0;
}


#include <stdio.h>              
#include <string.h>

int main()              //把s1的字符串赋给s2
{
    char s1[] = "Hello,World";
    char s2[20];
    char* from = s1,* to = s2;

    while (* from)          //若数组s2的元素不为0，则把s2的值赋给s1
    {
        * to = * from;
        to++;
        from++;
    }

    * to = '\0';            //补0
    puts(s1);
    puts(s2);
    
    return 0;
}




#include <stdio.h>              
#include <string.h>

int main()              //比较s1和s2的大小
{
    char s1[80], s2[80];
    char* str1, * str2;
    int d;

    printf("请输入字符串1和字符串2：");
    gets(s1);
    gets(s2);

    str1 = s1;              //将s1、s2赋给两个指针
    str2 = s2;

    while (* str1 && * str2)        //比较每个字符大小
    {
        d = * str1 - * str2;
        if (d != 0)
        break;
        str1++;
        str2++;
    }

    printf("%d", d);

    return 0;
}




#include <stdio.h>
#include <string.h>

int main()              //主函数
{
    char s1[80], s2[80];    //定义两个字符串
    int i = 0, j = 0;       //定义两个计数器

    printf("输入字符串s1和s2：");     //提示用户输入两个字符串
    gets(s1);               //读取字符串s1
    gets(s2);               //读取字符串s2

    while (s1[i] != '\0')   //找到字符串s1的结尾位置
        i++;

    while (s2[j] != '\0')   //将字符串s2拼接到字符串s1的结尾
    {
        s1[i] = s2[j];      //将s2的第j个字符赋值给s1的第i个位置
        i++;                //将s1的位置指针指向下一个位置
        j++;                //将s2的位置指针指向下一个位置
    }

    s1[i] = '\0';           //在s1的结尾添加空字符
    puts(s1);               //输出拼接后的字符串

    return 0;               //程序结束
}



#include <stdio.h>
#include <string.h>

int main()              ////该程序的功能是将一个字符串中的所有小写字母转换为大写字母，将一个字符串中的所有大写字母转换为小写字母，并输出转换后的两个字符串。
{
    char s1[] = "BeiJing2008", s2[] = "BeiJing2008";    //定义两个字符串
    char* str1, * str2;     //定义两个指向字符的指针
    str1 = s1;              //将s1、s2赋给两个指针
    str2 = s2;

    while (* str1 != '\0')      //将s1中所有大写字母转换为小写字母
    {
        if (* str1 >= 'A' && * str1 <= 'Z')     //如果是大写字母
            * str1 += 32;                       //将其转换为小写字母
        str1++;                                 //将指针指向下一个字符
    }

    while (* str2 != '\0')      //将s2中所有小写字母转换为大写字母
    {
        if (* str2 >= 'a' && * str2 <= 'z')     //如果是小写字母
            * str2 -= 32;                       //将其转换为大写字母
        str2++;                                 //将指针指向下一个字符
    }

    puts(s1);           //输出转换后的字符串s1
    puts(s2);           //输出转换后的字符串s2

    return 0;           //程序结束
}



#include <stdio.h>
#include <string.h>

int main()					//此程序的功能是从标准输入中读取一个字符串，然后去掉其中的空格，最后输出处理后的字符串。
{
    char s[80], *p1, *p2;  // 声明变量 s，p1，p2

    printf("输入一个字符串：");
    gets(s);  // 从标准输入中读取一个字符串

    p1 = p2 = s;  // 初始化指针变量 p1，p2

    while (*p1)  // 遍历字符串 s
    {
        if (*p1 == ' ')  // 如果当前字符是空格，则跳过
            p1++;
        else
        {
            *p2 = *p1;  // 否则将当前字符拷贝到 p2 指向的位置，并移动 p1 和 p2 的指针位置
            p2++;
            p1++;
        }
    }

    *p2 = '\0';  // 在 p2 指向的位置添加字符串结束标志

    printf("%s", s);  // 输出处理后的字符串

    return 0;
}



#include <stdio.h>
#include <string.h>

int main()
{
    char s[8], *p;  // 声明变量 s，p，n
    int n = 0;

    printf("请输入一个字符串：");
    gets(s);  // 从标准输入中读取一个字符串

    p = s;

    while (*p)  // 遍历字符串 s
    {
        n = n * 10 + (*p - 48);  // 将字符转换为数字，并累加到 n 中
        p++;
    }

    printf("%d", n);  // 输出转换后的结果

    return 0;
}



#include <stdio.h>
#include <string.h>

int main()
{ int a[3][4] = {{0,1,2,3},{4,5,6,7},{8,9,10,11}}; // 二维数组a，包括3行4列 int* pa[3]; // 指针数组pa，包括3个元素，每个元素都是一个指向int类型的指针 int i, j;

// 将二维数组的每一行的首地址赋值给指针数组的元素
for (i = 0;i < 3;i++)
    pa[i] = a[i];

// 遍历指针数组和二维数组，输出数组元素的值
for (i = 0;i < 3;i++)
{
    for (j = 0;j < 4;j++)
        printf("a[%d][%d] = %d  ", i, j, *(pa[i] + j)); // 使用指针访问二维数组的元素
    
    printf("\n");
}

return 0;
}




#include <stdio.h>
#include <string.h>

int main() {
    int a[3];
    int *p = a; // 定义整型数组 a 和指针变量 p，将数组 a 的地址赋值给指针 p
    int i, j, k, temp;

    printf("输入三个整数：");

    for (i = 0; i < 3; i++) {
        scanf("%d", &a[i]); // 输入三个整数，并将它们存放在数组 a 中
    }
    
    // 选择排序算法，将数组 a 中的元素从小到大排列
    for (i = 0; i < 3; i++) {
        k = i;
        for (j = i + 1; j < 3; j++) {
            if (p[k] > p[j]) // 如果当前位置的值比后面位置的值大，则记录后面位置为最小值的位置 k 
                k = j;
        }
        if (k != i) { // 如果 k 的值不等于 i 的值，则交换这两个位置的值，从而将最小值放到最前面
            temp = p[k];
            p[k] = p[i];
            p[i] = temp;
        }
    }

    // 输出排好序的三个整数
    for (i = 0; i < 3; i++) {
        printf("%d ", a[i]);
    }
        
    return 0;
}




#include <stdio.h>
#include <string.h>

int main()
{
    int a[10], i;
    int* pa = a;

    printf("请输入十个整数：");

    for (i = 0; i < 10; i++) // 循环输入十个整数
        scanf("%d", &pa[i]);

    int sum = 0;
    double aver;
    int len;
    len = sizeof(a) / sizeof(a[0]); // 数组长度

    for (i = 0; i < 10; i++) // 循环计算数组元素之和
    {
        sum += pa[i];
    }

    aver = sum / len * 1.0; // 计算数组元素平均值

    printf("aver = %.2lf\n", aver); // 输出数组元素平均值，保留两位小数

    int j, k, temp;

    for (i = 0; i < 2; i++) // 循环找出最大值和次大值，并将其排在数组前两个位置
    {
        k = i;
        for (j = i + 1; j < 10; j++)
        {
            if (pa[k] < pa[j])
                k = j;
        }
        if (pa[k] != pa[i])
        {
            temp = pa[i];
            pa[i] = pa[k];
            pa[k] = temp;
        }
    }

    printf("最大值和次大值为：%d %d\n", pa[0], pa[1]); // 输出最大值和次大值

    return 0;
}


#include <stdio.h>
#include <string.h>

int main()
{
    int a[10], i;
    int* pa = a;

    printf("请输入十个整数：");

    for (i = 0; i < 10; i++) // 循环输入十个整数
        scanf("%d", &pa[i]);

    int j, k, temp;

    k = 0;
    int m = 0;

    for (j = 1; j < 10; j++) // 找出最大值的位置
    {
        if (pa[k] < pa[j])
            k = j;
    }

    for (j = 1; j < 10; j++) // 找出最小值的位置
    {
        if (pa[m] > pa[j])
            m = j;
    }

    temp = pa[k];
    pa[k] = pa[m];
    pa[m] = temp;

    printf("将最大值和最小值的位置互换："); // 输出数组元素，将最大值和最小值交换后的结果
    for (i = 0; i < 10; i++)
        printf("%d  ", pa[i]);

    return 0;
}




#include <stdio.h>
#include <string.h>

int main()
{ int a[10], i; int* pa = a; // 定义指向数组的指针

printf("请输入十个整数：");

for (i = 0;i < 10;i++)
    scanf("%d", &pa[i]); // 读入十个整数并存入数组中

printf("输入一个数x：");

int j, x, k;

scanf("%d", &x); // 读入要查找的数x

for (j = 0;j < 10;j++) // 在数组中查找数x
{
    if (x == pa[j]) // 如果找到x，输出它的位置并结束循环
    {
        printf("x为数组中第%d个元素", j + 1);
        break;
    }
}

if (j == 10) // 如果循环结束还没有找到x，则输出没有找到
    printf("没有找到。");

return 0;
}


#include <stdio.h>              
#include <string.h>

// 定义函数myprint，输出18个星号
void myprint()
{
    int i = 0;

    for (i = 1; i <= 18; i++)
        printf("*");
        
    printf("\n");
}

// 定义函数myprint_n，输出n个星号
void myprint_n(int n)
{
    int i = 0;

    for (i = 1; i <= n; i++)
        printf("*")

    printf("\n");
}

// 主函数
int main()
{
    // 调用函数myprint，输出18个星号
    myprint();

    // 调用函数myprint_n，输出6个星号
    myprint_n(6);

    // 调用函数myprint_n，输出12个星号
    myprint_n(12);

    // 调用函数myprint，输出18个星号
    myprint();

    return 0;
}



#include <stdio.h>              
#include <string.h>

// 自定义函数mypow，实现计算x的y次方
double mypow(double x, int y)
{
    int i;
    double z = 1.0;

    // 循环计算x的y次方
    for (i = 1; i <= y; i++)
        z = z * x;

    return z;
}

// 主函数
int main()
{
    double x, z;
    int y;

    // 提示用户输入x和y
    printf("输入x，y：");
    scanf("%lf%d", &x, &y);

    // 调用mypow函数，计算x的y次方
    z = mypow(x, y);

    // 输出结果
    printf("%.2lf, %d, %.2lf", x, y, z);

    return 0;
}


#include <stdio.h>

// 自定义函数my_max，返回三个整数中的最大值
int my_max(int a, int b, int c)
{
    int max;

    // 比较a和b的大小，取较大值
    if (a > b)
        max = a;
    else
        max = b;

    // 再比较之前的较大值和c的大小，取最大值
    if (max < c)
        max = c;

    return max;
}

// 主函数
int main()
{
    int x, y, z, m;

    // 提示用户输入三个整数
    printf("输入三个整数：");
    scanf("%d %d %d", &x, &y, &z);

    // 调用my_max函数，求出最大值
    m = my_max(x, y, z);

    // 输出最大值到控制台
    printf("最大值为%d", m);

    return 0;
}





#include <stdio.h>
#include <math.h>

// 自定义函数my_fac，用于计算n的阶乘
double my_fac(int n)
{
    int i;
    double p = 1;

    // 计算n的阶乘
    for (i = 1; i <= n; i++)
    {
        p *= i;
    }

    return p;
}

// 主函数
int main()
{
    int n;
    double sq, m;

    // 提示用户输入一个整数n
    printf("请输入一个整数：");
    scanf("%d", &n);

    // 调用内置函数sqrt求出n的平方根
    sq = sqrt(n);

    // 调用my_fac函数计算n的阶乘
    m = my_fac(n);

    // 输出n的平方根和阶乘到控制台
    printf("%.2lf %.2lf", sq, m);

    return 0;
}






#include <stdio.h>
#include <math.h>

// 自定义函数my_max，返回两个整数中的最大值
int my_max(int x, int y)
{
    int max;

    // 使用条件运算符（三目运算符）比较x和y的大小，取最大值
    max = x > y ? x : y;

    return max;
}

// 主函数
int main()
{
    int a, b, max;

    // 提示用户输入两个整数
    printf("输入两个整数:");
    scanf("%d %d", &a, &b);

    // 调用my_max函数，求出两个整数中的最大值
    max = my_max(a, b);

    // 输出最大值到控制台
    printf("max = %d", max);

    return 0;
}